// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: buy_or_sell.proto

package coins_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuyOrSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId     string `protobuf:"bytes,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	CoinAmount string `protobuf:"bytes,3,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount,omitempty"`
}

func (x *BuyOrSellRequest) Reset() {
	*x = BuyOrSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrSellRequest) ProtoMessage() {}

func (x *BuyOrSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrSellRequest.ProtoReflect.Descriptor instead.
func (*BuyOrSellRequest) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{0}
}

func (x *BuyOrSellRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BuyOrSellRequest) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *BuyOrSellRequest) GetCoinAmount() string {
	if x != nil {
		return x.CoinAmount
	}
	return ""
}

type BuyOrSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAddress string `protobuf:"bytes,1,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
	CoinAmount   string `protobuf:"bytes,2,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount,omitempty"`
	AmountPrice  string `protobuf:"bytes,3,opt,name=amount_price,json=amountPrice,proto3" json:"amount_price,omitempty"`
}

func (x *BuyOrSellResponse) Reset() {
	*x = BuyOrSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrSellResponse) ProtoMessage() {}

func (x *BuyOrSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrSellResponse.ProtoReflect.Descriptor instead.
func (*BuyOrSellResponse) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{1}
}

func (x *BuyOrSellResponse) GetAdminAddress() string {
	if x != nil {
		return x.AdminAddress
	}
	return ""
}

func (x *BuyOrSellResponse) GetCoinAmount() string {
	if x != nil {
		return x.CoinAmount
	}
	return ""
}

func (x *BuyOrSellResponse) GetAmountPrice() string {
	if x != nil {
		return x.AmountPrice
	}
	return ""
}

type UserBuy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserAddress string `protobuf:"bytes,2,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	Price       string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	AmountCoin  string `protobuf:"bytes,4,opt,name=amount_coin,json=amountCoin,proto3" json:"amount_coin,omitempty"`
	CoinPrice   string `protobuf:"bytes,5,opt,name=coin_price,json=coinPrice,proto3" json:"coin_price,omitempty"`
	CoinName    string `protobuf:"bytes,6,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	Image       string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *UserBuy) Reset() {
	*x = UserBuy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBuy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBuy) ProtoMessage() {}

func (x *UserBuy) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBuy.ProtoReflect.Descriptor instead.
func (*UserBuy) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{2}
}

func (x *UserBuy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserBuy) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *UserBuy) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *UserBuy) GetAmountCoin() string {
	if x != nil {
		return x.AmountCoin
	}
	return ""
}

func (x *UserBuy) GetCoinPrice() string {
	if x != nil {
		return x.CoinPrice
	}
	return ""
}

func (x *UserBuy) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *UserBuy) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type UserSell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CardNumber string `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Price      string `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	AmountCoin string `protobuf:"bytes,4,opt,name=amount_coin,json=amountCoin,proto3" json:"amount_coin,omitempty"`
	CoinPrice  string `protobuf:"bytes,5,opt,name=coin_price,json=coinPrice,proto3" json:"coin_price,omitempty"`
	CoinName   string `protobuf:"bytes,6,opt,name=coin_name,json=coinName,proto3" json:"coin_name,omitempty"`
	Image      string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *UserSell) Reset() {
	*x = UserSell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSell) ProtoMessage() {}

func (x *UserSell) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSell.ProtoReflect.Descriptor instead.
func (*UserSell) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{3}
}

func (x *UserSell) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserSell) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UserSell) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *UserSell) GetAmountCoin() string {
	if x != nil {
		return x.AmountCoin
	}
	return ""
}

func (x *UserSell) GetCoinPrice() string {
	if x != nil {
		return x.CoinPrice
	}
	return ""
}

func (x *UserSell) GetCoinName() string {
	if x != nil {
		return x.CoinName
	}
	return ""
}

func (x *UserSell) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type GetListUserBuyOrSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetListUserBuyOrSellRequest) Reset() {
	*x = GetListUserBuyOrSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListUserBuyOrSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListUserBuyOrSellRequest) ProtoMessage() {}

func (x *GetListUserBuyOrSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListUserBuyOrSellRequest.ProtoReflect.Descriptor instead.
func (*GetListUserBuyOrSellRequest) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{4}
}

func (x *GetListUserBuyOrSellRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetListUserBuyOrSellRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListUserBuyOrSellRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListUserSellResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	UserSell []*UserSell `protobuf:"bytes,2,rep,name=user_sell,json=userSell,proto3" json:"user_sell,omitempty"`
}

func (x *GetListUserSellResponse) Reset() {
	*x = GetListUserSellResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListUserSellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListUserSellResponse) ProtoMessage() {}

func (x *GetListUserSellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListUserSellResponse.ProtoReflect.Descriptor instead.
func (*GetListUserSellResponse) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{5}
}

func (x *GetListUserSellResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListUserSellResponse) GetUserSell() []*UserSell {
	if x != nil {
		return x.UserSell
	}
	return nil
}

type GetListUserBuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count   int64      `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	UserBuy []*UserBuy `protobuf:"bytes,2,rep,name=user_buy,json=userBuy,proto3" json:"user_buy,omitempty"`
}

func (x *GetListUserBuyResponse) Reset() {
	*x = GetListUserBuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buy_or_sell_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListUserBuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListUserBuyResponse) ProtoMessage() {}

func (x *GetListUserBuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buy_or_sell_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListUserBuyResponse.ProtoReflect.Descriptor instead.
func (*GetListUserBuyResponse) Descriptor() ([]byte, []int) {
	return file_buy_or_sell_proto_rawDescGZIP(), []int{6}
}

func (x *GetListUserBuyResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListUserBuyResponse) GetUserBuy() []*UserBuy {
	if x != nil {
		return x.UserBuy
	}
	return nil
}

var File_buy_or_sell_proto protoreflect.FileDescriptor

var file_buy_or_sell_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x6f, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x65, 0x0a, 0x10, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7c, 0x0a, 0x11, 0x42, 0x75, 0x79,
	0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x75, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0xc4, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x43, 0x6f, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x65, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x6c, 0x6c, 0x22, 0x61, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x42, 0x75, 0x79, 0x32, 0xd4, 0x02, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x53,
	0x65, 0x6c, 0x6c, 0x12, 0x4e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x1f,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x75, 0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x20, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x75, 0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x42, 0x75, 0x79, 0x12, 0x1f, 0x2e,
	0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x75,
	0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x42,
	0x75, 0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x52, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79,
	0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x4f,
	0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63,
	0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x75, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x2a, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16,
	0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buy_or_sell_proto_rawDescOnce sync.Once
	file_buy_or_sell_proto_rawDescData = file_buy_or_sell_proto_rawDesc
)

func file_buy_or_sell_proto_rawDescGZIP() []byte {
	file_buy_or_sell_proto_rawDescOnce.Do(func() {
		file_buy_or_sell_proto_rawDescData = protoimpl.X.CompressGZIP(file_buy_or_sell_proto_rawDescData)
	})
	return file_buy_or_sell_proto_rawDescData
}

var file_buy_or_sell_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_buy_or_sell_proto_goTypes = []interface{}{
	(*BuyOrSellRequest)(nil),            // 0: coins_service.BuyOrSellRequest
	(*BuyOrSellResponse)(nil),           // 1: coins_service.BuyOrSellResponse
	(*UserBuy)(nil),                     // 2: coins_service.UserBuy
	(*UserSell)(nil),                    // 3: coins_service.UserSell
	(*GetListUserBuyOrSellRequest)(nil), // 4: coins_service.GetListUserBuyOrSellRequest
	(*GetListUserSellResponse)(nil),     // 5: coins_service.GetListUserSellResponse
	(*GetListUserBuyResponse)(nil),      // 6: coins_service.GetListUserBuyResponse
}
var file_buy_or_sell_proto_depIdxs = []int32{
	3, // 0: coins_service.GetListUserSellResponse.user_sell:type_name -> coins_service.UserSell
	2, // 1: coins_service.GetListUserBuyResponse.user_buy:type_name -> coins_service.UserBuy
	0, // 2: coins_service.BuyOrSell.GetSell:input_type -> coins_service.BuyOrSellRequest
	0, // 3: coins_service.BuyOrSell.GetBuy:input_type -> coins_service.BuyOrSellRequest
	4, // 4: coins_service.BuyOrSell.GetUserBuy:input_type -> coins_service.GetListUserBuyOrSellRequest
	4, // 5: coins_service.BuyOrSell.GetUserSell:input_type -> coins_service.GetListUserBuyOrSellRequest
	1, // 6: coins_service.BuyOrSell.GetSell:output_type -> coins_service.BuyOrSellResponse
	1, // 7: coins_service.BuyOrSell.GetBuy:output_type -> coins_service.BuyOrSellResponse
	2, // 8: coins_service.BuyOrSell.GetUserBuy:output_type -> coins_service.UserBuy
	3, // 9: coins_service.BuyOrSell.GetUserSell:output_type -> coins_service.UserSell
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_buy_or_sell_proto_init() }
func file_buy_or_sell_proto_init() {
	if File_buy_or_sell_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_buy_or_sell_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buy_or_sell_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buy_or_sell_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBuy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buy_or_sell_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buy_or_sell_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListUserBuyOrSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buy_or_sell_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListUserSellResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buy_or_sell_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListUserBuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buy_or_sell_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buy_or_sell_proto_goTypes,
		DependencyIndexes: file_buy_or_sell_proto_depIdxs,
		MessageInfos:      file_buy_or_sell_proto_msgTypes,
	}.Build()
	File_buy_or_sell_proto = out.File
	file_buy_or_sell_proto_rawDesc = nil
	file_buy_or_sell_proto_goTypes = nil
	file_buy_or_sell_proto_depIdxs = nil
}
