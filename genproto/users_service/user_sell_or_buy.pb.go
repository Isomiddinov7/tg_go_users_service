// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.12.4
// source: user_sell_or_buy.proto

package users_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserBuyTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Coin        string `protobuf:"bytes,2,opt,name=coin,proto3" json:"coin,omitempty"`
	User        string `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	CoinPrice   string `protobuf:"bytes,4,opt,name=coin_price,json=coinPrice,proto3" json:"coin_price,omitempty"`
	CoinAmount  string `protobuf:"bytes,5,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount,omitempty"`
	AllPrice    string `protobuf:"bytes,6,opt,name=all_price,json=allPrice,proto3" json:"all_price,omitempty"`
	Status      string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	UserAddress string `protobuf:"bytes,8,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	CheckImg    string `protobuf:"bytes,9,opt,name=CheckImg,proto3" json:"CheckImg,omitempty"`
	Message     string `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt   string `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UserBuyTransaction) Reset() {
	*x = UserBuyTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBuyTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBuyTransaction) ProtoMessage() {}

func (x *UserBuyTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBuyTransaction.ProtoReflect.Descriptor instead.
func (*UserBuyTransaction) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{0}
}

func (x *UserBuyTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserBuyTransaction) GetCoin() string {
	if x != nil {
		return x.Coin
	}
	return ""
}

func (x *UserBuyTransaction) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *UserBuyTransaction) GetCoinPrice() string {
	if x != nil {
		return x.CoinPrice
	}
	return ""
}

func (x *UserBuyTransaction) GetCoinAmount() string {
	if x != nil {
		return x.CoinAmount
	}
	return ""
}

func (x *UserBuyTransaction) GetAllPrice() string {
	if x != nil {
		return x.AllPrice
	}
	return ""
}

func (x *UserBuyTransaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserBuyTransaction) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *UserBuyTransaction) GetCheckImg() string {
	if x != nil {
		return x.CheckImg
	}
	return ""
}

func (x *UserBuyTransaction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserBuyTransaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserSellTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CoinId     string `protobuf:"bytes,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	UserId     string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinPrice  string `protobuf:"bytes,4,opt,name=coin_price,json=coinPrice,proto3" json:"coin_price,omitempty"`
	CoinAmount string `protobuf:"bytes,5,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount,omitempty"`
	AllPrice   string `protobuf:"bytes,6,opt,name=all_price,json=allPrice,proto3" json:"all_price,omitempty"`
	Status     string `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CardNumber string `protobuf:"bytes,8,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CheckImg   string `protobuf:"bytes,9,opt,name=CheckImg,proto3" json:"CheckImg,omitempty"`
	Message    string `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt  string `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UserSellTransaction) Reset() {
	*x = UserSellTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSellTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSellTransaction) ProtoMessage() {}

func (x *UserSellTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSellTransaction.ProtoReflect.Descriptor instead.
func (*UserSellTransaction) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{1}
}

func (x *UserSellTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UserSellTransaction) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *UserSellTransaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSellTransaction) GetCoinPrice() string {
	if x != nil {
		return x.CoinPrice
	}
	return ""
}

func (x *UserSellTransaction) GetCoinAmount() string {
	if x != nil {
		return x.CoinAmount
	}
	return ""
}

func (x *UserSellTransaction) GetAllPrice() string {
	if x != nil {
		return x.AllPrice
	}
	return ""
}

func (x *UserSellTransaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserSellTransaction) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UserSellTransaction) GetCheckImg() string {
	if x != nil {
		return x.CheckImg
	}
	return ""
}

func (x *UserSellTransaction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserSellTransaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type UserSellRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId     string `protobuf:"bytes,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	CoinAmount string `protobuf:"bytes,3,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount,omitempty"`
	Message    string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	CardNumber string `protobuf:"bytes,5,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	CheckImg   string `protobuf:"bytes,6,opt,name=check_img,json=checkImg,proto3" json:"check_img,omitempty"`
}

func (x *UserSellRequest) Reset() {
	*x = UserSellRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSellRequest) ProtoMessage() {}

func (x *UserSellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSellRequest.ProtoReflect.Descriptor instead.
func (*UserSellRequest) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{2}
}

func (x *UserSellRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSellRequest) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *UserSellRequest) GetCoinAmount() string {
	if x != nil {
		return x.CoinAmount
	}
	return ""
}

func (x *UserSellRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserSellRequest) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *UserSellRequest) GetCheckImg() string {
	if x != nil {
		return x.CheckImg
	}
	return ""
}

type UserBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CoinId     string `protobuf:"bytes,2,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	CoinAmount string `protobuf:"bytes,4,opt,name=coin_amount,json=coinAmount,proto3" json:"coin_amount,omitempty"`
	Message    string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	PayImg     string `protobuf:"bytes,6,opt,name=pay_img,json=payImg,proto3" json:"pay_img,omitempty"`
}

func (x *UserBuyRequest) Reset() {
	*x = UserBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBuyRequest) ProtoMessage() {}

func (x *UserBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBuyRequest.ProtoReflect.Descriptor instead.
func (*UserBuyRequest) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{3}
}

func (x *UserBuyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserBuyRequest) GetCoinId() string {
	if x != nil {
		return x.CoinId
	}
	return ""
}

func (x *UserBuyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UserBuyRequest) GetCoinAmount() string {
	if x != nil {
		return x.CoinAmount
	}
	return ""
}

func (x *UserBuyRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserBuyRequest) GetPayImg() string {
	if x != nil {
		return x.PayImg
	}
	return ""
}

type GetListUserTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetListUserTransactionRequest) Reset() {
	*x = GetListUserTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListUserTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListUserTransactionRequest) ProtoMessage() {}

func (x *GetListUserTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListUserTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetListUserTransactionRequest) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{4}
}

func (x *GetListUserTransactionRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetListUserTransactionRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListUserTransactionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetListUserSellTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count           int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	UserTransaction []*UserSellTransaction `protobuf:"bytes,2,rep,name=user_transaction,json=userTransaction,proto3" json:"user_transaction,omitempty"`
}

func (x *GetListUserSellTransactionResponse) Reset() {
	*x = GetListUserSellTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListUserSellTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListUserSellTransactionResponse) ProtoMessage() {}

func (x *GetListUserSellTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListUserSellTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetListUserSellTransactionResponse) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{5}
}

func (x *GetListUserSellTransactionResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListUserSellTransactionResponse) GetUserTransaction() []*UserSellTransaction {
	if x != nil {
		return x.UserTransaction
	}
	return nil
}

type GetListUserBuyTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count           int64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	UserTransaction []*UserBuyTransaction `protobuf:"bytes,2,rep,name=user_transaction,json=userTransaction,proto3" json:"user_transaction,omitempty"`
}

func (x *GetListUserBuyTransactionResponse) Reset() {
	*x = GetListUserBuyTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_sell_or_buy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListUserBuyTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListUserBuyTransactionResponse) ProtoMessage() {}

func (x *GetListUserBuyTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_sell_or_buy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListUserBuyTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetListUserBuyTransactionResponse) Descriptor() ([]byte, []int) {
	return file_user_sell_or_buy_proto_rawDescGZIP(), []int{6}
}

func (x *GetListUserBuyTransactionResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListUserBuyTransactionResponse) GetUserTransaction() []*UserBuyTransaction {
	if x != nil {
		return x.UserTransaction
	}
	return nil
}

var File_user_sell_or_buy_proto protoreflect.FileDescriptor

var file_user_sell_or_buy_proto_rawDesc = []byte{
	0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6f, 0x72, 0x5f, 0x62,
	0x75, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x02, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6d, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xc2, 0x02, 0x0a, 0x13, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x69,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x6c,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x69, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6d, 0x67, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x69, 0x6e, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x79, 0x49, 0x6d, 0x67, 0x22, 0x65, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x89, 0x01,
	0x0a, 0x22, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4d, 0x0a, 0x10, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x32, 0xfe, 0x02, 0x0a, 0x14, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c,
	0x4f, 0x72, 0x42, 0x75, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x07, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x12, 0x1d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x70, 0x0a, 0x0b, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c,
	0x6c, 0x12, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x75, 0x79, 0x12, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x30, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x75, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_sell_or_buy_proto_rawDescOnce sync.Once
	file_user_sell_or_buy_proto_rawDescData = file_user_sell_or_buy_proto_rawDesc
)

func file_user_sell_or_buy_proto_rawDescGZIP() []byte {
	file_user_sell_or_buy_proto_rawDescOnce.Do(func() {
		file_user_sell_or_buy_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_sell_or_buy_proto_rawDescData)
	})
	return file_user_sell_or_buy_proto_rawDescData
}

var file_user_sell_or_buy_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_user_sell_or_buy_proto_goTypes = []interface{}{
	(*UserBuyTransaction)(nil),                 // 0: users_service.UserBuyTransaction
	(*UserSellTransaction)(nil),                // 1: users_service.UserSellTransaction
	(*UserSellRequest)(nil),                    // 2: users_service.UserSellRequest
	(*UserBuyRequest)(nil),                     // 3: users_service.UserBuyRequest
	(*GetListUserTransactionRequest)(nil),      // 4: users_service.GetListUserTransactionRequest
	(*GetListUserSellTransactionResponse)(nil), // 5: users_service.GetListUserSellTransactionResponse
	(*GetListUserBuyTransactionResponse)(nil),  // 6: users_service.GetListUserBuyTransactionResponse
	(*Empty)(nil),                              // 7: users_service.Empty
}
var file_user_sell_or_buy_proto_depIdxs = []int32{
	1, // 0: users_service.GetListUserSellTransactionResponse.user_transaction:type_name -> users_service.UserSellTransaction
	0, // 1: users_service.GetListUserBuyTransactionResponse.user_transaction:type_name -> users_service.UserBuyTransaction
	2, // 2: users_service.UserSellOrBuyService.UserSell:input_type -> users_service.UserSellRequest
	3, // 3: users_service.UserSellOrBuyService.UserBuy:input_type -> users_service.UserBuyRequest
	4, // 4: users_service.UserSellOrBuyService.AllUserSell:input_type -> users_service.GetListUserTransactionRequest
	4, // 5: users_service.UserSellOrBuyService.AllUserBuy:input_type -> users_service.GetListUserTransactionRequest
	7, // 6: users_service.UserSellOrBuyService.UserSell:output_type -> users_service.Empty
	7, // 7: users_service.UserSellOrBuyService.UserBuy:output_type -> users_service.Empty
	5, // 8: users_service.UserSellOrBuyService.AllUserSell:output_type -> users_service.GetListUserSellTransactionResponse
	6, // 9: users_service.UserSellOrBuyService.AllUserBuy:output_type -> users_service.GetListUserBuyTransactionResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_user_sell_or_buy_proto_init() }
func file_user_sell_or_buy_proto_init() {
	if File_user_sell_or_buy_proto != nil {
		return
	}
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_user_sell_or_buy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBuyTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_sell_or_buy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSellTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_sell_or_buy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSellRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_sell_or_buy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_sell_or_buy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListUserTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_sell_or_buy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListUserSellTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_sell_or_buy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListUserBuyTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_sell_or_buy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_sell_or_buy_proto_goTypes,
		DependencyIndexes: file_user_sell_or_buy_proto_depIdxs,
		MessageInfos:      file_user_sell_or_buy_proto_msgTypes,
	}.Build()
	File_user_sell_or_buy_proto = out.File
	file_user_sell_or_buy_proto_rawDesc = nil
	file_user_sell_or_buy_proto_goTypes = nil
	file_user_sell_or_buy_proto_depIdxs = nil
}
